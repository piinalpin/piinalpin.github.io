<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Python - Tag - PiinAlpin&#39;s Blog</title>
        <link>https://blog.piinalpin.com/tags/python/</link>
        <description>Python - Tag - PiinAlpin&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 21 May 2022 17:07:17 &#43;0700</lastBuildDate><atom:link href="https://blog.piinalpin.com/tags/python/" rel="self" type="application/rss+xml" /><item>
    <title>Salary Prediction with ML - Linear Regression</title>
    <link>https://blog.piinalpin.com/2022/05/salary-prediction-with-machine-learning/</link>
    <pubDate>Sat, 21 May 2022 17:07:17 &#43;0700</pubDate>
    <author>Author</author>
    <guid>https://blog.piinalpin.com/2022/05/salary-prediction-with-machine-learning/</guid>
    <description><![CDATA[Machine learning is a branch of artificial intelligence (AI) and computer science which focuses on the use of data and algorithms to imitate the way that humans learn, gradually improving its accuracy.
How Does Machine Learning Works? Similar to how the human brain gains knowledge and understanding, machine learning relies on input, such as training data or knowledge graphs, to understand entities, domains and the connections between them. With entities defined, deep learning can begin.]]></description>
</item><item>
    <title>Image Processing Using Tensorflow - Convolutional Neural Network (CNN)</title>
    <link>https://blog.piinalpin.com/2021/12/image-processing-using-tensorflow/</link>
    <pubDate>Fri, 10 Dec 2021 10:02:39 &#43;0700</pubDate>
    <author>Author</author>
    <guid>https://blog.piinalpin.com/2021/12/image-processing-using-tensorflow/</guid>
    <description><![CDATA[Digital image processing is the use of a digital computer to process digital images through an algorithm. As a subcategory or field of digital signal processing, digital image processing has many advantages over analog image processing.]]></description>
</item><item>
    <title>Spring Boot Web Socket Chat Bot</title>
    <link>https://blog.piinalpin.com/2021/10/spring-boot-web-socket-chat-bot/</link>
    <pubDate>Thu, 14 Oct 2021 14:52:27 &#43;0700</pubDate>
    <author>Author</author>
    <guid>https://blog.piinalpin.com/2021/10/spring-boot-web-socket-chat-bot/</guid>
    <description><![CDATA[Build real time chat with bot using spring boot web socket and contextual chat bot python.]]></description>
</item><item>
    <title>Contextual Chat Bot using NLP</title>
    <link>https://blog.piinalpin.com/2021/10/contextual-chat-bot/</link>
    <pubDate>Thu, 14 Oct 2021 11:19:26 &#43;0700</pubDate>
    <author>Author</author>
    <guid>https://blog.piinalpin.com/2021/10/contextual-chat-bot/</guid>
    <description><![CDATA[Build contextual chat bot with python and tensorflow library to talking about riddles. We will build a model for a puzzle conversation.]]></description>
</item><item>
    <title>Create Simple Microservice With gRPC</title>
    <link>https://blog.piinalpin.com/2021/01/create-simple-microservice-with-grpc/</link>
    <pubDate>Sat, 30 Jan 2021 16:21:21 &#43;0700</pubDate>
    <author>Author</author>
    <guid>https://blog.piinalpin.com/2021/01/create-simple-microservice-with-grpc/</guid>
    <description><![CDATA[Build a simple microservices gRPC server and client using Spring Boot]]></description>
</item><item>
    <title>SQL Insert Generator from Excel File using Python</title>
    <link>https://blog.piinalpin.com/2020/12/sql-generator/</link>
    <pubDate>Sat, 12 Dec 2020 23:21:44 &#43;0700</pubDate>
    <author>Author</author>
    <guid>https://blog.piinalpin.com/2020/12/sql-generator/</guid>
    <description><![CDATA[How to create SQL insert generator using python with pandas and click library]]></description>
</item><item>
    <title>Django Mail Sender With Rabbit-MQ and Celery Worker</title>
    <link>https://blog.piinalpin.com/2020/02/django-mail-sender/</link>
    <pubDate>Wed, 12 Feb 2020 13:19:04 &#43;0700</pubDate>
    <author>Author</author>
    <guid>https://blog.piinalpin.com/2020/02/django-mail-sender/</guid>
    <description><![CDATA[Prerequisites  Erlang (Open Telecom Platform) RabbitMQ (Message Broker) Pyhton 3.6 (Base Compiler) Sendgrid Account (SMTP Client) Virtualenv  Step to create Django mail sender  Create virtual environtment in root directory on your project and activate it  1 2  virtualenv env . env/bin/activate   Install Django 2.1  1  pip install Django==2.1.2   Create project and application in Django  1 2  django-admin startproject your_project_name django-admin startapp your_apps_name   Install library celery and celery-message-consumer  1 2  pip install celery pip install celery-message-consumer   Edit django base settings project_name/settings.]]></description>
</item><item>
    <title>Get Twitter Trending with World of Earth Identity (WOEID)</title>
    <link>https://blog.piinalpin.com/2020/02/get-twitter-trending/</link>
    <pubDate>Tue, 04 Feb 2020 10:22:45 &#43;0700</pubDate>
    <author>Author</author>
    <guid>https://blog.piinalpin.com/2020/02/get-twitter-trending/</guid>
    <description><![CDATA[This tutorial will consume TwitterAPI to get Twitter Trendings with [Tweepy](https://www.tweepy.org/) Library]]></description>
</item><item>
    <title>Research Reference Bot</title>
    <link>https://blog.piinalpin.com/2020/01/research-reference-bot/</link>
    <pubDate>Fri, 17 Jan 2020 12:00:22 &#43;0700</pubDate>
    <author>Author</author>
    <guid>https://blog.piinalpin.com/2020/01/research-reference-bot/</guid>
    <description><![CDATA[This project will create search engine bot on telegram using TF IDF and Cosine Similarity]]></description>
</item><item>
    <title>Simple Flask App with Mysql</title>
    <link>https://blog.piinalpin.com/2019/12/flask-mysql/</link>
    <pubDate>Thu, 26 Dec 2019 16:46:49 &#43;0700</pubDate>
    <author>Author</author>
    <guid>https://blog.piinalpin.com/2019/12/flask-mysql/</guid>
    <description><![CDATA[<p>These instructions will get you a copy of the project up and running on your local machine for development and testing purposes. See deployment for notes on how to deploy the project on a live system.</p>
<h2 id="prerequisites">Prerequisites</h2>
<p>Make sure you have installed Python 3 on your device</p>
<h3 id="project-structure">Project structure</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">* flask-mysql/
</span></span><span class="line"><span class="cl">  |--- app/
</span></span><span class="line"><span class="cl">  |    |--- config/
</span></span><span class="line"><span class="cl">  |    |    |--- __init__.py
</span></span><span class="line"><span class="cl">  |    |    |--- Database.py
</span></span><span class="line"><span class="cl">  |    |--- controller/
</span></span><span class="line"><span class="cl">  |    |    |--- __init__.py
</span></span><span class="line"><span class="cl">  |    |    |--- CollegerController.py
</span></span><span class="line"><span class="cl">  |    |    |--- CoursesController.py
</span></span><span class="line"><span class="cl">  |    |    |--- Main.py
</span></span><span class="line"><span class="cl">  |    |    |--- TakeCourseController.py
</span></span><span class="line"><span class="cl">  |    |--- model/
</span></span><span class="line"><span class="cl">  |    |    |--- CollegerModel.py
</span></span><span class="line"><span class="cl">  |    |    |--- CoursesModel.py
</span></span><span class="line"><span class="cl">  |    |    |--- TakeCourseModel.py
</span></span><span class="line"><span class="cl">  |    |--- templates/
</span></span><span class="line"><span class="cl">  |    |--- __init__.py
</span></span><span class="line"><span class="cl">  |--- run.py
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="step-to-create-this-project">Step to create this project</h3>
<p>A step by step series of examples that tell you how to get a development env running</p>
<ol>
<li>Install virtual environment if you dont have virtual environment</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">pip install virtualenv
</span></span></code></pre></td></tr></table>
</div>
</div><ol start="2">
<li>Create virtual environment and activate inside your flask-rest-api directory according the above structure</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">virtualenv venv
</span></span><span class="line"><span class="cl">&gt; On windows -&gt; venv\Scripts\activate
</span></span><span class="line"><span class="cl">&gt; On linux -&gt; . env/bin/activate
</span></span></code></pre></td></tr></table>
</div>
</div><ol start="3">
<li>Install some third party libraries on your virtual environment with pip</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">pip install flask flask-sqlalchemy flask-migrate mysql-connector-python
</span></span></code></pre></td></tr></table>
</div>
</div><ol start="4">
<li>Install MySQL database if you don&rsquo;t have, but if you have MySQL you can skip this step</li>
<li>Create user and grant privilege for user was created</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-mysql" data-lang="mysql"><span class="line"><span class="cl"><span class="n">mysql</span><span class="o">&gt;</span><span class="w"> </span><span class="k">CREATE</span><span class="w"> </span><span class="k">USER</span><span class="w"> </span><span class="s1">&#39;newuser&#39;</span><span class="o">@</span><span class="s1">&#39;localhost&#39;</span><span class="w"> </span><span class="k">IDENTIFIED</span><span class="w"> </span><span class="k">BY</span><span class="w"> </span><span class="s1">&#39;password&#39;</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">mysql</span><span class="o">&gt;</span><span class="w"> </span><span class="k">GRANT</span><span class="w"> </span><span class="k">ALL</span><span class="w"> </span><span class="k">PRIVILEGES</span><span class="w"> </span><span class="k">ON</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="p">.</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="k">TO</span><span class="w"> </span><span class="s1">&#39;newuser&#39;</span><span class="o">@</span><span class="s1">&#39;localhost&#39;</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">mysql</span><span class="o">&gt;</span><span class="w"> </span><span class="k">FLUSH</span><span class="w"> </span><span class="k">PRIVILEGES</span><span class="p">;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><ol start="6">
<li>Create database on MySQL</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-mysql" data-lang="mysql"><span class="line"><span class="cl"><span class="n">mysql</span><span class="o">&gt;</span><span class="w"> </span><span class="k">CREATE</span><span class="w"> </span><span class="k">DATABASE</span><span class="w"> </span><span class="n">YOUR_DATABASE_NAME</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><ol start="7">
<li>Create <code>project_name/run.py</code> directory inside flask-project according the above structure</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">app</span> <span class="kn">import</span> <span class="n">app</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s2">&#34;__main__&#34;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">app</span><span class="o">.</span><span class="n">run</span><span class="p">(</span><span class="n">host</span><span class="o">=</span><span class="s2">&#34;localhost&#34;</span><span class="p">,</span> <span class="n">port</span><span class="o">=</span><span class="mi">5000</span><span class="p">,</span> <span class="n">debug</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ol start="8">
<li>Create <code>project_name/app/config/Database.py</code> to create configuration for database</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">DbConfig</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">DB_USERNAME</span> <span class="o">=</span> <span class="s2">&#34;&lt;YOUR_USERNAME&gt;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">DB_PASSWORD</span> <span class="o">=</span> <span class="s2">&#34;&lt;YOUR_PASSWORD&gt;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">DB_HOST</span> <span class="o">=</span> <span class="s2">&#34;localhost&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">DB_PORT</span> <span class="o">=</span> <span class="mi">3306</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">DB_NAME</span> <span class="o">=</span> <span class="s2">&#34;&lt;YOUR_DATABASE_NAME&gt;&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">getUri</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="s2">&#34;mysql+mysqlconnector://</span><span class="si">{}</span><span class="s2">:</span><span class="si">{}</span><span class="s2">@</span><span class="si">{}</span><span class="s2">:</span><span class="si">{}</span><span class="s2">/</span><span class="si">{}</span><span class="s2">&#34;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">DB_USERNAME</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">DB_PASSWORD</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">DB_HOST</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                                                              <span class="bp">self</span><span class="o">.</span><span class="n">DB_PORT</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">DB_NAME</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ol start="9">
<li>Create <code>project_name/app/__init__.py</code> inside app directory according the above structure <code>project_name/app/</code>. This step will setup for SQLAlchemy config.</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">flask</span> <span class="kn">import</span> <span class="n">Flask</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">flask_sqlalchemy</span> <span class="kn">import</span> <span class="n">SQLAlchemy</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">flask_migrate</span> <span class="kn">import</span> <span class="n">Migrate</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">app.config.Database</span> <span class="kn">import</span> <span class="n">DbConfig</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">app</span> <span class="o">=</span> <span class="n">Flask</span><span class="p">(</span><span class="vm">__name__</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">app</span><span class="o">.</span><span class="n">config</span><span class="p">[</span><span class="s2">&#34;SQLALCHEMY_DATABASE_URI&#34;</span><span class="p">]</span> <span class="o">=</span> <span class="n">DbConfig</span><span class="p">()</span><span class="o">.</span><span class="n">getUri</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="n">app</span><span class="o">.</span><span class="n">config</span><span class="p">[</span><span class="s2">&#34;SQLALCHEMY_TRACK_MODIFICATIONS&#34;</span><span class="p">]</span> <span class="o">=</span> <span class="kc">False</span>
</span></span><span class="line"><span class="cl"><span class="n">db</span> <span class="o">=</span> <span class="n">SQLAlchemy</span><span class="p">(</span><span class="n">app</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">migrate</span> <span class="o">=</span> <span class="n">Migrate</span><span class="p">(</span><span class="n">app</span><span class="p">,</span> <span class="n">db</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ol start="10">
<li>Define colleger model to application and create database migration, create python file on <code>app/model/</code> you can see defined model on <a href="https://github.com/piinalpin/flask-mysql/tree/master/app/model" target="_blank" rel="noopener noreffer">here</a></li>
<li>Update <code>app/__init__.py</code> should like as follows</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">flask</span> <span class="kn">import</span> <span class="n">Flask</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">flask_sqlalchemy</span> <span class="kn">import</span> <span class="n">SQLAlchemy</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">flask_migrate</span> <span class="kn">import</span> <span class="n">Migrate</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">app.config.Database</span> <span class="kn">import</span> <span class="n">DbConfig</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">app</span> <span class="o">=</span> <span class="n">Flask</span><span class="p">(</span><span class="vm">__name__</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">app</span><span class="o">.</span><span class="n">config</span><span class="p">[</span><span class="s2">&#34;SQLALCHEMY_DATABASE_URI&#34;</span><span class="p">]</span> <span class="o">=</span> <span class="n">DbConfig</span><span class="p">()</span><span class="o">.</span><span class="n">getUri</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="n">app</span><span class="o">.</span><span class="n">config</span><span class="p">[</span><span class="s2">&#34;SQLALCHEMY_TRACK_MODIFICATIONS&#34;</span><span class="p">]</span> <span class="o">=</span> <span class="kc">False</span>
</span></span><span class="line"><span class="cl"><span class="n">db</span> <span class="o">=</span> <span class="n">SQLAlchemy</span><span class="p">(</span><span class="n">app</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">app.model</span> <span class="kn">import</span> <span class="n">CoursesModel</span><span class="p">,</span> <span class="n">CollegerModel</span><span class="p">,</span> <span class="n">TakeCourseModel</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">migrate</span> <span class="o">=</span> <span class="n">Migrate</span><span class="p">(</span><span class="n">app</span><span class="p">,</span> <span class="n">db</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ol start="12">
<li>Run migration with flask-migrate, type in terminal as below</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">flask db init
</span></span><span class="line"><span class="cl">flask db migrate
</span></span><span class="line"><span class="cl">flask db upgrade
</span></span></code></pre></td></tr></table>
</div>
</div><ol start="13">
<li>
<p>The structure of database should like as follows
</p>
</li>
<li>
<p>Create controller to application, create python file on <code>app/controller/</code> you can see defined controller <a href="https://github.com/piinalpin/flask-mysql/tree/master/app/controller" target="_blank" rel="noopener noreffer">here</a></p>
</li>
<li>
<p>Update <code>app/__init__.py</code> add this import into end line of file, this step to import the controller</p>
</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">app.controller.Main</span> <span class="kn">import</span> <span class="o">*</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">app.controller.CollegerController</span> <span class="kn">import</span> <span class="o">*</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">app.controller.CoursesController</span> <span class="kn">import</span> <span class="o">*</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">app.controller.TakeCourseController</span> <span class="kn">import</span> <span class="o">*</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ol start="16">
<li>Create templates to application on <code>app/templates/</code> you can see defined templates <a href="https://github.com/piinalpin/flask-mysql/tree/master/app/templates" target="_blank" rel="noopener noreffer">here</a></li>
<li>Then, you can run this application by terminal</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">python run.py
</span></span></code></pre></td></tr></table>
</div>
</div><ol start="18">
<li>Homepage</li>
</ol>
<p></p>
<ol start="19">
<li>
<p>Colleger Page
</p>
</li>
<li>
<p>Courses Page
</p>
</li>
<li>
<p>Take Course Page
</p>
</li>
</ol>
<h2 id="built-with">Built With</h2>
<ul>
<li><a href="https://www.python.org/download/releases/3.0/" target="_blank" rel="noopener noreffer">Python 3</a> - The language programming used</li>
<li><a href="http://flask.pocoo.org/" target="_blank" rel="noopener noreffer">Flask</a> - The web framework used</li>
<li><a href="https://pypi.org/project/Flask-Migrate/" target="_blank" rel="noopener noreffer">Flask Migrate</a> - The database migration</li>
<li><a href="https://virtualenv.pypa.io/en/latest/" target="_blank" rel="noopener noreffer">Virtualenv</a> - The virtual environment used</li>
<li><a href="https://www.sqlalchemy.org/" target="_blank" rel="noopener noreffer">SQL Alchemy</a> - The database library</li>
<li><a href="http://flask-sqlalchemy.pocoo.org/2.3/" target="_blank" rel="noopener noreffer">Flask-SQLAlchemy</a> - Flask and SQL Alchemy connector</li>
<li><a href="https://pypi.org/project/mysql-connector-python/" target="_blank" rel="noopener noreffer">MySQL Connector Python</a> - Connector MySQL for Python</li>
<li><a href="https://www.mysql.com/" target="_blank" rel="noopener noreffer">MySQL</a> - MySQL Database</li>
</ul>
<h2 id="clone-or-download">Clone or Download</h2>
<p>You can clone or download this project</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&gt; Clone : git clone https://github.com/piinalpin/flask-mysql.git
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="authors">Authors</h2>
<ul>
<li><strong>Alvinditya Saputra</strong> - <a href="https://linkedin.com/in/piinalpin" target="_blank" rel="noopener noreffer">LinkedIn</a> <a href="https://www.instagram.com/piinalpin" target="_blank" rel="noopener noreffer">Instagram</a> <a href="https://www.twitter.com/piinalpin" target="_blank" rel="noopener noreffer">Twitter</a></li>
</ul>]]></description>
</item></channel>
</rss>
